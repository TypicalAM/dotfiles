# Network manager applet
exec --no-startup-id nm-applet

# Nextcloud
exec --no-startup-id nextcloud

# Screen lock utility
exec --no-startup-id xss-lock --transfer-sleep-lock -- betterlockscreen -l

# Polkit agent
exec --no-startup-id lxpolkit

# Enable tapping with the mousepad
exec --no-startup-id xinput set-prop $(xinput |awk '$0 ~ /Touchpad/ { for (i=1; i<=NF; i++) { if ($i ~ /^id=[0-9]+$/) { print $i; } } }' | cut -b 4-) $(xinput list-props $(xinput |awk '$0 ~ /Touchpad/	{ for (i=1; i<=NF; i++) { if ($i ~ /^id=[0-9]+$/) { print $i; } } }'| cut -b 4-)| awk '$0 ~ /Tapping Enabled \(/ { for (i=1; i<=NF; i++) { if ($i ~ /[0-9]):$/) { print $i; } } }' |cut -b 2-4) 1

# Compositor (enabling transparency)
exec --no-startup-id picom

# Alternating layouts (window spawning)
exec --no-startup-id python3 ~/code/window_manager_theming/i3-alternating-layout/alternating_layouts.py

# Set the outer gaps to 5px
gaps outer 5

# Set the inner gaps (between the open windows) to 10
gaps inner 10

# Hide the borders (we don't like em)
for_window [class=".*"] border pixel 0
hide_edge_borders both

# Set the font
font pango:Product Sans 14

# Audio mute
bindsym F1 exec --no-startup-id wpctl set-mute @DEFAULT_SINK@ toggle

# Audio volume down
bindsym F2 exec --no-startup-id wpctl set-volume @DEFAULT_SINK@ 5%-

# Audio volume up
bindsym F3 exec --no-startup-id wpctl set-volume @DEFAULT_SINK@ 5%+

# Kill the active app
bindsym F4 kill

# Brightness down
#bindsym F5 exec --no-startup-id light -U 10

# Brightness up
bindsym F6 exec --no-startup-id light -A 10

# Mute the microphone
bindsym $mod+grave exec --no-startup-id wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Set the Super key as the defualt modifier
set $mod Mod4

# Basic movement commands
bindsym $mod+Left workspace prev
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right workspace next
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
bindsym $mod+a focus parent
bindsym $mod+Tab workspace back_and_forth

# Rotate the screen 90Â°
bindcode 104 exec --no-startup-id bash ~/code/scripts/rotate_screen.sh

# Attach a new screen via hdmi
bindsym F7 exec --no-startup-id bash ~/code/scripts/attach_displays.sh

# Assign numbers to the windows
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"

# "Switch to workspace" commands
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5

# "Move and switch to workspace" commands
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace $ws10

# Layouts
bindsym $mod+h split h
bindsym $mod+v split v
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+f fullscreen toggle

floating_modifier $mod
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle

# Terminal of choice
bindsym $mod+Return exec --no-startup-id ~/code/scripts/kitty_wrapper.sh

# Marktext text editor (Fixed for fc36 - gpu sandbox bug)
bindsym $mod+l exec --no-startup-id ~/code/utils/bin/marktext

# Open todos
bindsym $mod+t exec ~/code/scripts/todo.sh

# Lock screen
bindsym $mod+Shift+l exec ~/.local/bin/betterlockscreen -l

# Create a gist with the clipboard contents
bindsym $mod+g exec bash ~/code/scripts/gist_paster.sh

# Set the next os to windows
bindsym $mod+Shift+w exec sudo bash ~/code/scripts/set_next_os.sh Windows

# Lock screen and hibernate
bindsym $mod+Shift+h exec --no-startup-id ~/.local/bin/betterlockscreen -l & sleep 0.5 && systemctl hibernate

assign [class="Firefox"] $ws1

for_window [class="Gnome-calculator"] floating enable
for_window [class="gwenview"] floating enable
for_window [class="kcalc"] floating enable
for_window [class="Remote-viewer"] floating enable

# Restart i3
bindsym $mod+Shift+r restart

# Log out
bindsym $mod+Shift+e exec --no-startup-id i3-msg exit

# Make a selection screenshot
bindsym Print exec --no-startup-id maim -s | xclip -selection clipboard -t image/png

# Make a whole screen screenshot
bindsym $mod+Print exec --no-startup-id maim -s "/home/adam/pictures/screenshots/screen-$(date +%s).png"

# Check the hex color of the area under the cursor
bindsym $mod+Shift+Print exec --no-startup-id bash ~/code/scripts/hex_color_finder.sh

# Window resizing mode
mode "resize" {
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# VM gamer time
mode "vm" {
	bindsym $mod+KP_Up exec --no-startup-id xrandr --output eDP --off
	bindsym $mod+KP_Prior exec --no-startup-id xrandr --output eDP --auto
	bindsym $mod+2 workspace $ws2

	bindsym $mod+grave exec --no-startup-id wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
	bindsym F2 exec --no-startup-id --no-startup-id wpctl set-volume @DEFAULT_SINK@ 5%-
	bindsym F3 exec --no-startup-id wpctl set-volume @DEFAULT_SINK@ 5%+

	bindsym $mod+KP_Home mode "default"
	bindsym $mod+Escape mode "default"
}


bindsym $mod+KP_Up exec --no-startup-id xrandr --output eDP --off
bindsym $mod+KP_Prior exec --no-startup-id xrandr --output eDP --auto
bindsym $mod+KP_Home mode "vm"

# Dynamic application launcher
bindsym $mod+q exec --no-startup-id rofi -no-lazy-grab -show drun -modi drun -theme ~/.config/rofi/default.rasi
#bindsym $mod+q exec ~/.config/rofi/launchers/type-4/launcher.sh

# Dynamic launcher basic
#bindsym $mod+q exec rofi -no-lazy-grab -show drun

# Bottom bar
exec_always bash ~/.config/polybar/launch.sh
#exec_always sh ~/.config/polybar/polybar-themes/onedark-theme/polybar/launch.sh

# Notification daemon
exec_always --no-startup-id dunst

# No hardware beeping
exec_always --no-startup-idxset b off

# Get the active wallpaper
exec_always feh --bg-fill ~/.config/current_wallpaper

bindsym $mod+Shift+q exec bash ~/code/scripts/start_dev_environment.sh
